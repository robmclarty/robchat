# App-specific config file located at /etc/nginx/sites-available/rebelchat.conf
# Based on https://github.com/robmclarty/nginx-config

# File hierarchy conventions:
# Static assets:       /srv/opt/rebelchat
# Configuration files: /etc/opt/rebelchat
# Log files:           /var/opt/rebelchat
# Application files:   /opt/rebelchat

# Set of upstream servers the reverse proxy. Define multiple servers here if
# setting up a horizontal-scaling load-balanced setup.
upstream rebelchat_upstream {
  server 127.0.0.1:4010;
}

# SSL server
server {
  listen 443 ssl http2; # http2 replaces spdy in nginx >= 1.9.5 (switch if you have a lower version)
  listen [::]:443 ssl http2;

  server_name chat.robmclarty.com;

  root /srv/opt/rebelchat;
  index index.html;

  charset utf-8;

  # ssl on;
  # ssl_certificate /etc/nginx/ssl/certs/rebelchat.crt;
  # ssl_certificate_key /etc/nginx/ssl/private/rebelchat.key;
  # ssl_dhparam /etc/nginx/ssl/certs/dhparam.pem;
  #
  # ssl_prefer_server_ciphers on;
  # ssl_protocols TLSv1.2;
  # ssl_ciphers "ECDHE-ECDSA-AES256-GCM-SHA384:ECDHE-RSA-AES256-GCM-SHA384:ECDHE-ECDSA-CHACHA20-POLY1305:ECDHE-RSA-CHACHA20-POLY1305:ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES128-GCM-SHA256:ECDHE-ECDSA-AES256-SHA384:ECDHE-RSA-AES256-SHA384:ECDHE-ECDSA-AES128-SHA256:ECDHE-RSA-AES128-SHA256";
  #
  # ssl_stapling on;
  # ssl_stapling_verify on;
  # ssl_trusted_certificate /etc/nginx/ssl/certs/rebelchat.crt;
  resolver 8.8.8.8 8.8.4.4 valid=300s;
  resolver_timeout 10s;

  # ssl_session_cache shared:SSL:50m;
  # ssl_session_timeout 5m;
  # ssl_session_tickets off; # requires nginx >= 1.5.9

  add_header Strict-Transport-Security "max-age=31536000; includeSubdomains; preload";
  add_header Content-Security-Policy "default-src 'self'; script-src 'self'; img-src 'self' data:; style-src 'self' 'unsafe-inline'; font-src 'self' data:; object-src 'none'; frame-src 'none'";

  # Cache static files forever (requires renaming them if they change).
  # I'm using a "rev" build task to rename files with contents' hash found in
  # https://github.com/robmclarty/gulp-tasks
  location ~* .(jpg|jpeg|png|gif|ico|css|js|woff|woff2|eot|svg|ttf|txt) {
    access_log off;
    log_not_found off;
    expires max;
  }

  # Match /admin* to the single page app at /admin/index.html and let the app's
  # router handle the uri.
  location ~* ^/rebelchat(.*)$ {
    try_files /rebelchat/index.html =404;
  }

  # Try serving static assets first, before passing to the app layer. Nginx can
  # serve static files orders of magnitude faster than Nodejs can.
  location / {
    try_files $uri @proxy;
  }

  # Pass requests for dynamic content to Nodejs application.
  location @proxy {
    proxy_hide_header X-Powered-By;

    proxy_set_header Host $http_host;
    proxy_set_header X-Real-IP $remote_addr;
    proxy_set_header X-Forwarded-Proto $scheme;
    proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;

    # For websockets...
    proxy_http_version 1.1;
    proxy_set_header Upgrade $http_upgrade; # allow websockets
    proxy_set_header Connection 'upgrade';
    proxy_cache_bypass $http_upgrade;

    proxy_pass http://rebelchat_upstream; # match `upstream` name defined above
    proxy_redirect off;
  }
}
